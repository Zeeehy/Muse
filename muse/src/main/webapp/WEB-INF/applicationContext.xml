<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<!-- configs -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
	<!-- fileupload configs -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10455040"></property><!-- 10mb -->
	</bean>



	<!-- daos -->
	<bean id="adminDao" class="com.muse.admin.model.AdminDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="museCalendarDao" class="com.muse.myPage.model.MuseCalendarDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="memberDao" class="com.muse.member.model.MemberDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="mainDao" class="com.muse.main.model.MainDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="rankDao" class="com.muse.rank.model.RankDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="partnerDao" class="com.muse.partner.model.PartnerDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="myPageUser" class="com.muse.myPage.model.MyPageUserDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="ReviewDao" class="com.muse.review.model.ReviewDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="myBookingList" class="com.muse.myPage.model.MyBookingListDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="myPass" class="com.muse.myPage.model.MPassDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="seatLayoutDao" class="com.muse.seat.model.SeatLayoutDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="museCastDao" class="com.muse.myPage.model.MuseCastDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="reservDao" class="com.muse.reserv.model.ReservDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="musicalDetailDao" class="com.muse.musicalDetail.model.MusicalDetailDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="bookingDetailDao" class="com.muse.myPage.model.MyBookingDetailDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="openNoticeDao" class="com.muse.openNotice.model.OpenNoticeDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="myReviewListDao" class="com.muse.myPage.model.MyReviewListDAOImpl">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="musePassDao" class="com.muse.musePass.model.MusePassDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<!-- add dao here -->
	
	
	<!-- example -->
<!--  
	<bean id="empDao" class="com.yong.emp.model.EmpDAOImple">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="bbsDao" class="com.yong.bbs.model.BbsDAOImple">
		<property name="sqlMap" ref="sqlSessionTemplate"></property>
	 </bean>
 -->




	<!-- mybatis datasource-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="muse"></property>
		<property name="password" value="1234"></property>
	</bean>
	<!-- mybatis 트랜잭션-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- mybatis-->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>

	<!-- 이메일 인증 관련 빈 등록 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="musepeplead2024@gmail.com" />
      <property name="password" value= "ktcauhasyaocbkge" />
      <property name="javaMailProperties">
         <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
            <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
   </bean>

</beans>
