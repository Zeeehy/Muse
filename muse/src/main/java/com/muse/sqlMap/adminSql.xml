<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.muse.admin.mapper.adminSQL">
  
  
  <select id="getWeekRank" resultType="com.muse.rank.model.RankDTO">
	SELECT * FROM (
	    SELECT m.m_code, m.m_poster, m.m_title, mh.mh_name, m.m_startdate, m.m_enddate,
	           ROUND(SUM(b_count) / 
	                 (SELECT SUM(b_count) 
	                  FROM booking 
	                  WHERE b_date BETWEEN TRUNC(SYSDATE, 'IW') 
	                                   AND TRUNC(SYSDATE, 'IW') + 7) * 100, 2) AS booking_rate,
	           ROW_NUMBER() OVER (ORDER BY ROUND(SUM(b_count) / 
	                           (SELECT SUM(b_count) 
	                            FROM booking 
	                            WHERE b_date BETWEEN TRUNC(SYSDATE, 'IW') 
	                                             AND TRUNC(SYSDATE, 'IW') + 7) * 100, 2) DESC) AS rank
	    FROM booking b 
	    JOIN musical_option mo ON b.mo_code = mo.mo_code
	    JOIN musical m ON m.m_code = mo.m_code
	    JOIN musical_hall mh ON m.mh_code = mh.mh_code
	    WHERE b.b_date BETWEEN TRUNC(SYSDATE, 'IW') AND TRUNC(SYSDATE, 'IW') + 7
	    AND m.m_viewstate = 1
	    GROUP BY m.m_code, m.m_poster, m.m_title, mh.mh_name, m.m_startdate, m.m_enddate
	)
	WHERE <![CDATA[rank <=5]]>
	ORDER BY rank
  </select>
  
  
  <select id="getTodayTicket" resultType="int">
	<![CDATA[
SELECT nvl(SUM(b_count) ,0) AS count
FROM booking
WHERE b_state = 1 
  AND b_date >= TRUNC(SYSDATE)
  AND b_date < TRUNC(SYSDATE + 1)
]]>
  </select>
  
  
  <select id="getTodayPrice" resultType="int">
<![CDATA[
SELECT nvl(SUM(b_total_price) ,0)  AS count
FROM booking
WHERE b_state = 1 
  AND b_date >= TRUNC(SYSDATE)
  AND b_date < TRUNC(SYSDATE + 1)
]]>
  </select>
  
  <select id="getInsertCount" resultType="int">
select count(*) as cnt
from 
service_request
where rt_code=0 and rs_code=0
  </select>
  
  <select id="getOpenCount" resultType="int">
select count(*) as cnt
from 
open_notice o
where o.rs_code=0
  </select>
  
  
<select id="getOpenApply" resultType="int">
select count(*) as cnt
from open_notice 
where on_viewstate=0 and rs_code=1
and <![CDATA[TO_DATE(on_open, 'YYYY-MM-DD HH24:MI:SS') <=  SYSDATE +7]]>
  </select> 
 
 
<select id="getInsertApply" resultType="int">
<![CDATA[
select count(*) as cnt
from 
service_request sr, musical m 
where rt_code=0 and rs_code=1 and m_viewstate=0
and m.m_code = sr.m_code
and m_opendate <= SYSDATE + 7
]]>
  </select>   
  
  
  <select id="goAdminLogin" resultType="Int" parameterType="map">
	select count(*)
	from admin
	where a_id=#{a_id} and a_pwd=#{a_pwd}
  </select>
  
  
  
  <select id="openRequestList" resultType="com.muse.admin.model.OpenNoticeDTO">
 	select on_code,o.m_code,o.rs_code,on_type,on_open,on_muse_open,on_info,on_sale,on_content,on_casting,on_img,on_etc,on_viewstate, m_title, pr_name,pr_num,pr_pnum,pr_email
	from 
	open_notice o, musical m, partner pr
	where o.rs_code=0 and o.m_code = m.m_code and m.pr_code=pr.pr_code
  </select>
  
  
  <select id="openRequest" resultType="com.muse.admin.model.OpenNoticeDTO" parameterType="String" >
	select on_code,o.m_code,o.rs_code,on_type,on_open,on_muse_open,on_info,on_sale,on_content,on_casting,on_etc,on_viewstate, m_title, pr_name,pr_num,pr_pnum,pr_email
	from 
	open_notice o, musical m, partner pr
	where o.rs_code=0 and o.on_code=#{on_code} and o.m_code = m.m_code and m.pr_code=pr.pr_code
  </select>
  
  <update id="openRequestEnd" parameterType="map" >
  	update open_notice set rs_code=#{rs_code} where on_code=#{on_code}
  </update>

  
  
   <select id="openApplyList" resultType="com.muse.admin.model.OpenNoticeDTO">
 	select on_code,o.m_code,o.rs_code,on_type,on_open,on_muse_open,on_info,on_sale,on_content,on_casting,on_img,on_etc,on_viewstate, m_title, pr_name,pr_num,pr_pnum,pr_email
	from 
	open_notice o, musical m, partner p
	where o.rs_code=1 and o.on_viewstate=0  and o.m_code = m.m_code and m.pr_code=p.pr_code and <![CDATA[TO_DATE(o.on_open, 'YYYY-MM-DD HH24:MI:SS') <=  SYSDATE +7]]>
  </select>
  
  <select id="openApply" resultType="com.muse.admin.model.OpenNoticeDTO" parameterType="String" >
	select on_code,o.m_code,o.rs_code,on_type,on_open,on_muse_open,on_info,on_sale,on_content,on_casting,on_etc,on_viewstate, m_title, pr_name,pr_num,pr_pnum,pr_email
	from 
	open_notice o, musical m, partner pr
	where o.rs_code=1 and o.on_code=#{on_code} and o.m_code = m.m_code and m.pr_code=pr.pr_code
  </select>

  <update id="openApplyEnd" parameterType="String" >
  	update open_notice set on_viewstate=1 where on_code=#{on_code}
  </update>
  
  
  
  <select id="bannerList"  resultType="com.muse.admin.model.BannerDTO">
	select b.b_code, b.m_code, b.b_date, m.m_title, m.m_poster, pr.pr_name
	from banner b, musical m, partner pr
	where b.m_code = m.m_code and m.pr_code = pr.pr_code
	order by b.b_date 
  </select>


  <select id="addBannerList"  resultType="com.muse.admin.model.BannerDTO">
	SELECT m.m_code, m.m_title, m.m_poster, pr.pr_name
	FROM musical m
	JOIN partner pr ON m.pr_code = pr.pr_code
	LEFT JOIN banner b ON m.m_code = b.m_code
	WHERE m.m_viewstate = 1 AND b.m_code IS NULL
  </select>
  
  <insert id="addBanner" parameterType="String">
  	insert into banner(b_code,m_code,b_date) values('b_'||BANNER_B_CODE.nextval,#{m_code},sysdate)
  </insert>
  
  <delete id="deleteBanner" parameterType="String">
  	delete from banner where m_code=#{m_code}
  </delete>
  
  



   <select id="partnerRequestList"  resultType="com.muse.admin.model.PartnerDTO">
	select u.u_id,u_name,u_pnum,u_email, pr_code,pr_name,pr_num,pr_pnum,pr_email,rs_code
	from partner p, users u
	where rs_code=0 and p.u_id = u.u_id
  </select>
  
  <select id="partnerRequest"  resultType="com.muse.admin.model.PartnerDTO">
	select u.u_id,u_name,u_pnum,u_email, pr_code,pr_name,pr_num,pr_pnum,pr_email,rs_code
	from partner p, users u
	where p.u_id = u.u_id and pr_code=#{pr_code}
  </select>
  
  <update id="partnerRequestEnd" parameterType="map" >
  	update partner set rs_code=#{rs_code} where pr_code=#{pr_code}
  </update>
  
  
  
   <select id="adminReviewList" resultType="com.muse.review.model.MusicalReviewDTO" parameterType="map">
	SELECT * FROM (
	    SELECT ROWNUM AS rnum, mr_code, mr_score, mr_title, mr_content, mr_date, m_title, u_id, mr_state
	    FROM (
	        SELECT DISTINCT 
	            mr.mr_code,
	            mr.mr_score,
	            mr.mr_title,
	            mr.mr_content,
	            mr.mr_date,
	            m.m_title,
	            b.u_id,
	            mr.mr_state
	        FROM musical_review mr
	        JOIN booking b ON mr.b_code = b.b_code
	        JOIN musical_option mo ON b.mo_code = mo.mo_code
	        JOIN musical m ON mo.m_code = m.m_code
	        ORDER BY mr.mr_date DESC
	    ) A
	    WHERE ROWNUM &lt;= #{endnum}
	) B
	WHERE rnum  &gt;= #{startnum}

  </select>
  
  <select id="getTotalCnt" resultType="Integer">
  select count(*) from musical_review
  </select>
  
  
  <update id="adminDeleteReview" parameterType="map">
   update musical_review set mr_state=#{mr_state} where mr_code=#{mr_code}
  </update>
  
<select id="adminSearchReviewList" resultType="com.muse.review.model.MusicalReviewDTO" parameterType="String">
    SELECT mr_code, mr_score, mr_title, mr_content, mr_date, m_title, u_id, mr_state
    FROM musical_review mr
    JOIN booking b ON b.b_code = mr.b_code
    JOIN musical_option mo ON b.mo_code = mo.mo_code
    JOIN musical m ON m.m_code = mo.m_code
    <where>
        <if test="search_word != null and search_word != ''">
            (mr_content LIKE '%' || #{search_word} || '%' OR mr_title LIKE '%' || #{search_word} || '%')
        </if>
    </where>
    ORDER BY mr_date DESC
</select>


  
  

  
  	<resultMap id="musePassStatsMap" type="java.util.HashMap">
	    <result property="nopass" column="nopass"/>
	    <result property="mpass" column="mpass"/>
	</resultMap>
	
  <select id="musePassStats" resultMap="musePassStatsMap">
	  SELECT 
	    COUNT(CASE WHEN u_mpass = 0 THEN 1 END) AS nopass,
	    COUNT(CASE WHEN u_mpass = 1 THEN 1 END) AS mpass
	FROM users
  </select>
  
  
  <select id="pReviewList" resultType="com.muse.admin.model.RequestListDTO" >
	select bdr_code,bdr.pr_code,bdr_key as mr_code, bdr_reason,  mr_score, mr_title,mr_content, mr_date, m_title,p.u_id,pr_name
	from BBS_DELETE_REQUEST bdr, musical_review mr, booking b, musical_option mo, musical m,partner p
	where bdr_state=0
	and bdr.bdr_key = mr.mr_code
	and b.b_code = mr.b_code and b.mo_code = mo.mo_code and m.m_code = mo.m_code and bdr.pr_code = p.pr_code
  </select>
  
  
  <update id="pReview" parameterType="map">
  update bbs_delete_request set bdr_state=#{bdr_state} where bdr_code=#{bdr_code}
  </update>
  
  <delete id="pReviewDelete" parameterType="String">
	delete from musical_review where mr_code in
	(
	select bdr_key
	from bbs_delete_request
	where bdr_code=#{bdr_code}
	)
  </delete>
  
  
  <select id="addRequestList" resultType="com.muse.admin.model.ServiceRequestDTO" parameterType="Int">
  select sr_code, m.m_code, m.m_title,rs_date,rs_etc,pr_name, m_startdate, m_enddate, m_opendate,m_single
	from service_request sr, partner p, musical m
	where sr.rt_code = #{rt_code} and sr.rs_code =0 
	and m.m_code = sr.m_code and p.pr_code = m.pr_code
  </select>
  
  <select id="addRequest" resultType="com.muse.admin.model.MusicalDTO" parameterType="String">
 select sr_code, m.m_code,m_title,m_startdate,m_enddate,m_time,m_intime,m_maxticket,m_age,m_opendate,m_opentime,m_notice,m_poster,m_detailimg,m_calendar,m_single,
  mh_name,pr_name,pr_num,pr_pnum,pr_email
	from service_request sr, partner p, musical m, musical_hall mh
	where sr.rt_code = 0 and sr.rs_code =0 and sr_code = #{sr_code}
	and m.m_code = sr.m_code and p.pr_code = m.pr_code and mh.mh_code = m.mh_code
  </select>
  
  <update id="addRequestEnd" parameterType="map">
  update service_request set rs_code=#{rs_code} where sr_code=#{sr_code}
  </update>  
  
  
  
   <select id="addApplyList" resultType="com.muse.admin.model.ServiceRequestDTO">
	<![CDATA[
	  SELECT sr_code, m_title, pr_name, m_opendate, m_startdate,m_enddate, m.m_code
	  FROM musical m, service_request sr, partner p
	  WHERE m.m_code = sr.m_code 
	    AND p.pr_code = m.pr_code 
	    AND sr.rs_code = 1 
	    AND rt_code = 0 and m_viewstate=0
	    AND m_opendate <= SYSDATE + 7
	]]>

  </select>  
  
  
  <select id="addApply" parameterType="String" resultType="com.muse.admin.model.MusicalDTO">
   select sr_code, m.m_code,m_title,m_startdate,m_enddate,m_time,m_intime,m_maxticket,m_age,m_opendate,m_opentime,m_notice,m_poster,m_detailimg,m_calendar,m_single,
  mh_name,pr_name,pr_num,pr_pnum,pr_email
	from service_request sr, partner p, musical m, musical_hall mh
	where sr.rt_code = 0 and sr.rs_code =1 and sr_code = #{sr_code}
	and m.m_code = sr.m_code and p.pr_code = m.pr_code and mh.mh_code = m.mh_code 
  </select>
  
  <update id="addApplyEnd" parameterType="String">
  update musical set m_viewstate = 1 where m_code = #{m_code}
  </update>
  
  
  

	
  <select id="memberStats" resultType="com.muse.admin.model.MemberStatsDTO">
	<![CDATA[
	WITH monthly_stats AS (
	    SELECT 
	        TO_CHAR(u_date, 'YYYY-MM') AS joinMonth,
	        COUNT(*) AS new_members
	    FROM users 
	    WHERE u_date >= ADD_MONTHS(SYSDATE, -9)
	    GROUP BY TO_CHAR(u_date, 'YYYY-MM')
	),
	initial_member_count AS (
	    SELECT COUNT(*) AS initial_members
	    FROM users
	    WHERE u_date < ADD_MONTHS(SYSDATE, -9)
	),
	monthly_stats_muse AS (
	    SELECT 
	        TO_CHAR(u_date, 'YYYY-MM') AS joinMonth,
	        COUNT(*) AS new_members
	    FROM users 
	    WHERE u_date >= ADD_MONTHS(SYSDATE, -9) and u_mpass = 1
	    GROUP BY TO_CHAR(u_date, 'YYYY-MM')
	),
	initial_member_count_muse AS (
	    SELECT COUNT(*) AS initial_members
	    FROM users
	    WHERE u_date < ADD_MONTHS(SYSDATE, -9) and u_mpass = 1
	)
	SELECT 
	    ms.joinMonth,
	    (SELECT initial_members FROM initial_member_count) + SUM(ms.new_members) OVER (ORDER BY ms.joinMonth ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS memberTotal,
	    (SELECT initial_members FROM initial_member_count_muse) + SUM(ms_muse.new_members) OVER (ORDER BY ms_muse.joinMonth ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS museTotal
	FROM monthly_stats ms
	LEFT JOIN monthly_stats_muse ms_muse ON ms.joinMonth = ms_muse.joinMonth
	ORDER BY ms.joinMonth
	]]>
  </select>
  
  
  <select id="partnerStats" resultType="com.muse.admin.model.StatsDTO">
	select p.pr_code, p.pr_name, sum(bd_price) as count
	from booking_detail bd, seat s ,musical m, partner p, booking b
	where bd_state = 1 and 
	bd.s_code = s.s_code and m.m_code = s.m_code and m.pr_code = p.pr_code and b.b_code = bd.b_code
	group by p.pr_code, p.pr_name 
	order by count desc

  </select>
  
  
    <select id="partnerStatsTime" resultType="com.muse.admin.model.StatsDTO">

	select p.pr_code, p.pr_name, sum(bd_price) as count
	from booking_detail bd, seat s ,musical m, partner p, booking b
	where bd_state = 1 and 
	bd.s_code = s.s_code and m.m_code = s.m_code and m.pr_code = p.pr_code and b.b_code = bd.b_code
    <if test="time == 1">
        <![CDATA[ 
            AND b_date >= TRUNC(SYSDATE) 
            AND b_date < TRUNC(SYSDATE) + 1
        ]]>   
    </if>
    <if test="time == 7">
        <![CDATA[ 
            AND b_date >= TRUNC(SYSDATE) - 7 
            AND b_date < TRUNC(SYSDATE) + 1
        ]]>  
    </if>
    <if test="time == 30">
        <![CDATA[ 
            AND b_date >= TRUNC(SYSDATE) - 30
            AND b_date < TRUNC(SYSDATE) + 1
        ]]>  
    </if>
	group by p.pr_code, p.pr_name 
	order by count desc
  </select>
  
  
  <select id="rankingStats" resultType="com.muse.admin.model.StatsDTO">
	select m.m_code,m.m_title,count(*) as count
	from booking_detail bd, seat s ,musical m, booking b 
	where bd_state = 1 and 
	bd.s_code = s.s_code and m.m_code = s.m_code  and b.b_code= bd.b_code
	group by m.m_code,m.m_title
	order by count desc
  </select>
  

    
    
  <select id="rankingStatsTime" resultType="com.muse.admin.model.StatsDTO">

	select m.m_code,m.m_title,count(*) as count
	from booking_detail bd, seat s ,musical m, booking b 
	where bd_state = 1 and 
	bd.s_code = s.s_code and m.m_code = s.m_code  and b.b_code= bd.b_code
    <if test="time == 1">
        <![CDATA[ 
            AND b_date >= TRUNC(SYSDATE) 
            AND b_date < TRUNC(SYSDATE) + 1
        ]]>   
    </if>
    <if test="time == 7">
        <![CDATA[ 
            AND b_date >= TRUNC(SYSDATE) - 7 
            AND b_date < TRUNC(SYSDATE) + 1
        ]]>  
    </if>
    <if test="time == 30">
        <![CDATA[ 
            AND b_date >= TRUNC(SYSDATE) - 30
            AND b_date < TRUNC(SYSDATE) + 1
        ]]>  
    </if>
	group by m.m_code,m.m_title
	order by count desc
  </select>
  
  
  
  
  </mapper>