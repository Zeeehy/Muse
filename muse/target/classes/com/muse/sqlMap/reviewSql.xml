<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.muse.revew.mapper.reviewSQL">
  
  <select id="srSearchResultM" parameterType="map" resultType="com.muse.review.model.SeatReviewDTO">
	select m_title, m_startdate,m_enddate, mh_name,m_poster,m_code,mh.mh_code
	from musical m, musical_hall mh
	where m.m_title like #{searchWord} and m.mh_code = mh.mh_code
  
  </select>
  
  <select id="srSearchResultMH" parameterType="String" resultType="com.muse.review.model.SeatReviewDTO">
	select mh_name,mh_code
	from musical_hall
	where mh_name like #{searchWord}
  </select>
  
  
  <select id="getWriterId" parameterType="String" resultType="String">
  select u_id
  from booking
  where b_code = #{b_code}
  </select>
  
  <select id="mrWrite" parameterType="String" resultType="com.muse.review.model.MusicalReviewDTO">
	select to_char( mo_date,'yyyy-mm-dd') ||' '|| mo_time as mo_date, m_title,b_code
	from musical_option mo, booking b, musical m
	where b_code =#{b_code} and b.mo_code = mo.mo_code and m.m_code = mo.m_code
  </select>
  
  <insert id="mrWriteEnd" parameterType="com.muse.review.model.MusicalReviewDTO">
  insert into Musical_review (mr_code,b_code,mr_score,mr_title,mr_content,mr_date,mr_state) values('mr_' || MUSICAL_REVIEW_MR_CODE.nextval,#{b_code},#{mr_score},
   #{mr_title},#{mr_content},sysdate,0)
  </insert>
  
  <select id="getMr_code" resultType="Integer">
  	SELECT MUSICAL_REVIEW_MR_CODE.currval FROM dual
  </select>
  
  <insert id="addPoint" parameterType="map" >
  insert into point(pt_code,u_id,pt_category,pt_categorycode,pt_point,pt_date ) values(POINT_PT_CODE.nextval,#{u_id},0,#{mr_code},#{point},sysdate)
  </insert>
  
  <select id="getWriterIdByBdCode" parameterType="String" resultType="String">
  select u_id
  from booking_detail bd, booking b
  where  bd_code = #{bd_code} and b.b_code=bd.b_code 
  </select>
  
  <select id="srWrite" parameterType="String" resultType="com.muse.review.model.SeatReviewDTO">
  select bd_code,mh_name,m_title,s_floor,s_section,s_row,s_position 
  from booking_detail bd, seat s, musical m, musical_hall mh
  where bd_code =#{bd_code} and bd.s_code = s.s_code and m.m_code =s.m_code and m.mh_code = mh.mh_code
  </select>
  
  <insert id="srWriteEnd" parameterType="com.muse.review.model.SeatReviewDTO">
  insert into SEAT_REVIEW (sr_code,bd_code,sr_score,sr_content,sr_date) values('sr_'||SEAT_REVIEW_SR_CODE.nextval,#{bd_code},#{sr_score},#{sr_content},sysdate)
  </insert>
  
  <select id="getSr_code" resultType="Integer">
  	SELECT SEAT_REVIEW_SR_CODE.currval FROM dual
  </select>
  
  <select id="getMh_name" parameterType="String" resultType="String">
  select mh_name
  from musical_hall
  where mh_code=#{mh_code}
  </select>
  
  <select id="getM_name" parameterType="String" resultType="String">
  select m_title
  from musical
  where m_code=#{m_code}
  </select>
  
  
  
  
  
  
    <select id="seatLayoutSelectReview" resultType="com.muse.seat.model.SeatLayoutDTO" parameterType="map">
		SELECT *
		FROM musical_hall_layout hl
		JOIN seat_layout sl ON hl.lt_code = sl.lt_code
		where sl_bind=#{sl_bind} AND MHL_CODE = #{mhl_code}
		order by sl_code
	</select>
	
	<select id="sectionSelectReview" resultType="java.lang.String" parameterType="map">
		SELECT distinct sl_section
		FROM musical_hall_layout hl
		JOIN seat_layout sl ON hl.lt_code = sl.lt_code
		where sl_bind=#{sl_bind} AND MHL_CODE = #{mhl_code}
		
	</select>
	
	<select id="bindByallFloorSelectReview" resultType="Integer" parameterType="map">
		SELECT distinct sl_floor
		FROM musical_hall_layout hl
		JOIN seat_layout sl ON hl.lt_code = sl.lt_code
		where sl_bind=#{sl_bind} AND MHL_CODE = #{mhl_code}
	</select>
	
	<resultMap id="MaxRowResultMap" type="java.util.HashMap">
	    <result property="sl_floor_key" column="sl_floor_key"/>
	    <result property="max_row" column="max_row"/>
	</resultMap>
	
	<!-- select 태그에서 resultMap 사용 -->
	<select id="max_rowSelectReview" resultMap="MaxRowResultMap" parameterType="Integer">
	      SELECT sl_floor AS sl_floor_key, MAX(sl_row) AS max_row
	    FROM seat_layout sl, MUSICAL_HALL_LAYOUT mhl
	    WHERE 
            sl.lt_code = mhl.mhl_code and
        MHL_CODE = #{mhl_code}
	    GROUP BY sl_floor
	    ORDER BY sl_floor
	</select>
	
	<select id="getRealSeatReview" resultType="com.muse.seat.model.SeatDTO" parameterType="String">
		select *
		from seat
		where m_code = #{m_code}
	</select>
	
	<select id="getMhl_code" resultType="Integer" parameterType="String">
	select mhl_code
	from musical_hall_layout
	where mh_code=#{mh_code}
	</select>	
	
	
	
	<select id="srShowListByHall" resultType="com.muse.review.model.SeatReviewDTO" parameterType="map">
	select sr_code,bd.bd_code, sr_score, sr_content, sr_date, m_title
	from seat_review sr, booking_detail bd, seat s, musical m 
	where bd.bd_code in (
	    select bd_code
	    from booking_detail
	    where s_code in
	    (
	        select s_code
	        from seat s
	        where s_section=#{s_section} and s_row=#{s_row} and s_floor=#{s_floor} and s_position=#{s_position} and mhl_code = (select mhl_code from musical_hall_layout where mh_code=#{mh_code})
	        
	    ) 
	    
	) and sr.bd_code = bd.bd_code and bd.s_code = s.s_code and s.m_code = m.m_code
	order by sr_date desc
	</select>
	
	<select id="srShowListByM" resultType="com.muse.review.model.SeatReviewDTO" parameterType="map">
	select sr_code,bd.bd_code ,sr_score, sr_content, sr_date, m_title
	from seat_review sr, booking_detail bd, seat s, musical m 
	where bd.bd_code in (
	    select bd_code
	    from booking_detail
	    where s_code in
	    (
	        select s_code
	        from seat s
	        where s_section=#{s_section} and s_row=#{s_row} and s_floor=#{s_floor} and s_position=#{s_position} and mhl_code = (select mhl_code from musical_hall_layout where mh_code=#{mh_code})
	        
	    ) 
	    
	) and sr.bd_code = bd.bd_code and bd.s_code = s.s_code and s.m_code = m.m_code and m.m_code = #{m_code}
	order by sr_date desc
	</select>
	
	
	<select id="srShowAvgByHall" resultType="double" parameterType="map">
	select ROUND(AVG(sr_score), 1) as avg_score
	from seat_review 
	where bd_code in (
	    select bd_code
	    from booking_detail
	    where s_code in
	    (
	        select s_code
	        from seat s
	        where s_section=#{s_section} and s_row=#{s_row} and s_floor=#{s_floor} and s_position=#{s_position} and mhl_code = (select mhl_code from musical_hall_layout where mh_code=#{mh_code})
	        
	    ) 
	) 
	</select>
	
	<select id="srShowAvgByM" resultType="double" parameterType="map">
	 select ROUND(AVG(sr_score), 1) as avg_score
	from seat_review sr, booking_detail bd, seat s, musical m 
	where bd.bd_code in (
	    select bd_code
	    from booking_detail
	    where s_code in
	    (
	        select s_code
	        from seat s
	        where s_section=#{s_section} and s_row=#{s_row} and s_floor=#{s_floor} and s_position=#{s_position} and mhl_code = (select mhl_code from musical_hall_layout where mh_code=#{mh_code})
	        
	    ) 
	    
	) and sr.bd_code = bd.bd_code and bd.s_code = s.s_code and s.m_code = m.m_code and m.m_code = #{m_code}
	</select>
	
	
	
	
	<select id="getRealSeatByHall" resultType="com.muse.seat.model.SeatDTO" parameterType="String">
	SELECT 
	    s.s_section,
	    s.s_row,
	    s.s_floor,
	    s.s_position,
	    ROUND(AVG(sr.sr_score), 1) as avg_score
	FROM 
	    musical_hall mh
	    JOIN musical_hall_layout mhl ON mh.mh_code = mhl.mh_code
	    JOIN seat s ON mhl.mhl_code = s.mhl_code
	    LEFT JOIN booking_detail bd ON s.s_code = bd.s_code
	    LEFT JOIN seat_review sr ON bd.bd_code = sr.bd_code
	WHERE 
	    mh.mh_code = #{mh_code}
	GROUP BY 
	    s.s_section,
	    s.s_row,
	    s.s_floor,
	    s.s_position
	ORDER BY 
	    s.s_floor,
	    s.s_section,
	    s.s_row,
	    s.s_position
	</select>
	
	
	<select id="getRealSeatByM" resultType="com.muse.seat.model.SeatDTO" parameterType="String">
	SELECT
	    s.s_code, 
	    s.sg_code,
	    s.m_code,
	    s.mhl_code,
	    s.s_section,
	    s.s_position, 
	    s.s_row, 
	    s.s_floor, 
	    ROUND(AVG(sr.sr_score), 1) as avg_score
	FROM 
	    seat s
	LEFT JOIN booking_detail bd ON s.s_code = bd.s_code
	LEFT JOIN seat_review sr ON bd.bd_code = sr.bd_code
	WHERE 
	    s.m_code = #{m_code}
	GROUP BY 
	    s.s_code, 
	    s.sg_code,
	    s.m_code,
	    s.mhl_code,
	    s.s_section,
	    s.s_position, 
	    s.s_row, 
	    s.s_floor
	ORDER BY 
	    s.s_code
	</select>
	
  
  </mapper>